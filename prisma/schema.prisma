generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("subscriber")
  accounts      Account[]
  sessions      Session[]
  links         Links[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String   @id @default(cuid())
  title       String
  description String
  s3BucketKey String
  image       String
  createdAt   DateTime @default(now())
  links       Links[]
}

model Links {
  id         String   @id @default(cuid())
  userId     String
  categoryId String
  title      String
  url        String
  slug       String
  type       String   @default("Free")
  medium     String   @default("Video")
  clicks     Int      @default(0)
  postedBy   User     @relation(fields: [userId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}
